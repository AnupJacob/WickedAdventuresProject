name: Deploy

on:
  push:
    branches: [ docker_CD ]
  pull_request:
    branches: [ docker_CD ]
 
jobs:
  deploy:
    name: deploy to cluster
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIAUTE5BGDUMOP3UM7K
        aws-secret-access-key: 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
        aws-region: us-east-1
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Install and configure kubectl
      env:
        KUBECONFIG_PATH: /home/runner/work/devopslecturer/awmsc2022/KUBECONFIG
      run: |
        VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
            --progress-bar \
            --location \
            --remote-name
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        echo ${{ env.KUBECONFIG_PATH }} | base64 --decode > kubeconfig.yaml

    - name: deploy to cluster
      env:
        DOCKER_REGISTRY: hub.docker.com
        DOCKER_REPOSITORY: wwa-app
        IMAGE_TAG: v1
      run: |
        export DOCKER_REPOSITORY=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}
        export IMAGE_TAG=${{ env.IMAGE_TAG }}
        export KUBECONFIG=kubeconfig.yaml
        envsubst < k8s/kustomization.tmpl.yaml > k8s/kustomization.yaml
        kubectl kustomize k8s | kubectl apply -f -
          
    - name: verify deployment
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBECONFIG_PATH: /home/runner/work/devopslecturer/awmsc2022/KUBECONFIG
      with:
        args: rollout status deployment/wwa-app
