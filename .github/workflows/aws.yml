name: Deploy

on:
  push:
    branches: [ docker_CD ]
  pull_request:
    branches: [ docker_CD ]
 
jobs:
  deploy:
    name: deploy to cluster
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIAUTE5BGDUMOP3UM7K
        aws-secret-access-key: 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
        aws-region: us-east-1
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Install and configure kubectl
      env:
        KUBECONFIG_PATH: ./KUBECONFIG
      run: |
        VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
            --progress-bar \
            --location \
            --remote-name
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        echo "$GITHUB_WORKSPACE/KUBECONFIG" >> $GITHUB_PATH
        echo ${{ env.GITHUB_PATH }} > kubeconfig.yaml

    - name: deploy to cluster
      env:
        DOCKER_REGISTRY: hub.docker.com
        DOCKER_REPOSITORY: wwa-app
        IMAGE_TAG: v1
      run: |
        export DOCKER_REPOSITORY=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}
        export IMAGE_TAG=${{ env.IMAGE_TAG }}
        cat <<< '
        apiVersion: v1
        clusters:
        - cluster:
          certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EUXdNekl5TVRBMU1sb1hEVE15TURNek1USXlNVEExTWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXRFClVSNTBJZVo4eTgxMTFkdXZRT250akI0UVZRcE13eWNjb0NKMEsxOHJkZGdIUTF0MEtKc1p4V21BYkZvci9ESGIKN2FjTTVRYld0MmJUMWM1TlRWVXJPYm95MVNJSFBmRVplQ051SGxtV0wzZEo0RkJhelFQV2d0R0hyL0JHQWVUaApTNVU3cTZCYStDbmtxVFo4T0NCY3pDd3hNSldQUkU1cE9DS2hxeDg1VkNOYUVGemM4V0crVGRFLy9KYUdJNjU1Cm9NQXpranFZWlhIWWhLQUNJeTZxb2dkQjVyUkdyZ2kxZGFGL0IydUxrcEtSc3VFSHRqc0IrdkpxeVdvZ0RucmUKOSsvSFdnaWVGMDRsOVU4aGJ0amJ2Yzg2L3BMODBuUHJCMk1nZGUyeXhIWm1BMUpsRWo2SkZkNDZSeS9lc1d5cQpXcHJhQVo3Rk9HdkozVGdDenRzQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOdE5pYmI2SnRNMnlEOERrQVg1dndjZ3cvM25NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBNEQvY0ZLUUxTZ1krYTJYY0dxVm9nQktLbE1xNHVFU0NMdUdNNHdoS0pUTkNvQ1lOYgoxazlzdlVzWE1RQ1dVYVFTNTl0ZnlBb2tnbmx5cXJpclBFUXZxUmQvQk1ZYjErdmpLZUxlRkFHN2h4M3FVaFFGCnMzWWhsREU4SDQ1aDlCRVBUQkZSOGxBdFRGUjlSS0ZzVm1KNVJ1MjkwbSthREt0VGFWdHdEK3VMQ2hLNVdUWk8KVk5zKzVsVCtDeHgrRTNlTUl4enZQTVdYRm5TazNqNXRLcEhQNVdtVStJaEt2N0xWRTRZZnljVUZvbkNGWlNxQQp2VnVhNTZDcUgwUVp5aERiNEZMQisvY0NGTlhmVUwyZkt2U1dmS2tYZDZLSks5N0ZpYm01WFYvRUdkbjJ5SGU1CnZUcXlhSlRTbmRPS0VkemdHTktXbnZlUkUzT2IySDhjTHdJMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          server: https://B89281D46F17AC127F6DE3520D63690C.gr7.us-east-1.eks.amazonaws.com
        name: wwa-app-eks-cluster.us-east-1.eksctl.io
        contexts:
        - context:
          cluster: wwa-app-eks-cluster.us-east-1.eksctl.io
          user: iam-root-account@wwa-app-eks-cluster.us-east-1.eksctl.io
        name: iam-root-account@wwa-app-eks-cluster.us-east-1.eksctl.io
        current-context: iam-root-account@wwa-app-eks-cluster.us-east-1.eksctl.io
        kind: Config
        preferences: {}
        users:
        - name: iam-root-account@wwa-app-eks-cluster.us-east-1.eksctl.io
        user:
          exec:
            apiVersion: client.authentication.k8s.io/v1alpha1
            args:
            - eks
            - get-token
            - --cluster-name
            - wwa-app-eks-cluster
            - --region
            - us-east-1
            command: aws
            env:
            - name: AWS_STS_REGIONAL_ENDPOINTS
              value: regional
            provideClusterInfo: false > kubeconfig.yaml
        cat kubeconfig.yaml
        envsubst < k8s/kustomization.tmpl.yaml > k8s/kustomization.yaml
        kubectl kustomize k8s | kubectl apply -f -
          
    - name: verify deployment
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBECONFIG_PATH: /home/runner/work/devopslecturer/awmsc2022/KUBECONFIG
      with:
        args: rollout status deployment/wwa-app
